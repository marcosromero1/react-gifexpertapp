{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OAEI,0BAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAUd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCLnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUH,GAH7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCDPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,EAAN,OCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAc,IAAD,EAEbd,mBAAU,CAChCqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAwBvC,OAjBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEFH,EAAS,CACFf,KAAMkB,EACNL,SAAS,SAK1B,CAACpB,IAKGqB,EDtB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAKrB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAoDhB,EAApD,KAECoB,GAAW,uBAAGJ,UAAU,qCAAb,WAEZ,yBAAKA,UAAU,aAIPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACND,UErBnBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAM9B,OACI,6BACI,wBAAI+B,UAAU,qCAAd,gBACA,kBAAC,EAAD,CAAa/B,cAAgBA,IAC7B,6BAIA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,U,MChBvC8B,IAASC,OACP,kBAAE,EAAF,MACAC,SAASC,eAAe,U","file":"static/js/main.ca53e75b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories(cats => [ inputValue, ...cats, ]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            /> \r\n        </form>\r\n        \r\n           \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QIdZ8aUZRMmrZI7VDh5DMb41IQm8Uco9`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n   \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'   //rafc\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\"> {category} </h3>\r\n\r\n            {loading && <p className=\" animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card.grid\">\r\n\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                 setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n             })\r\n\r\n    }, [category])\r\n\r\n   \r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"animate__animated animate__bounce\">GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr /> \r\n\r\n          \r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => ( \r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n        \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  < GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}